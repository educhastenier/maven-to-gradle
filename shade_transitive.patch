From 8e7f18a9f1466768339479c16721e705ad90946d Mon Sep 17 00:00:00 2001
From: Baptiste Mesta <baptiste.mesta@bonitasoft.com>
Date: Tue, 24 Jul 2018 11:34:52 +0200
Subject: [PATCH] fix transitive shade issue

---
 community/bpm/bonita-server/build.gradle      |  5 +++
 .../engine/gradle/ShadeExtension.groovy       |  7 +++
 .../engine/gradle/ShadePlugin.groovy          | 43 ++++++++-----------
 subscription/bpm/bonita-server/build.gradle   |  4 ++
 4 files changed, 35 insertions(+), 24 deletions(-)

diff --git a/community/bpm/bonita-server/build.gradle b/community/bpm/bonita-server/build.gradle
index fe549c28b0..433a60a340 100644
--- a/community/bpm/bonita-server/build.gradle
+++ b/community/bpm/bonita-server/build.gradle
@@ -64,3 +64,8 @@ dependencies {
 }
 
 description = 'Bonita Server'
+shade {
+  exclude project(':engine:platform:platform-setup')
+  exclude project(':engine:platform:platform-resources')
+  exclude project(':engine:bpm:bonita-common')
+}
diff --git a/community/buildSrc/src/main/groovy/org/bonitasoft/engine/gradle/ShadeExtension.groovy b/community/buildSrc/src/main/groovy/org/bonitasoft/engine/gradle/ShadeExtension.groovy
index 8c645c8e49..10349c058f 100644
--- a/community/buildSrc/src/main/groovy/org/bonitasoft/engine/gradle/ShadeExtension.groovy
+++ b/community/buildSrc/src/main/groovy/org/bonitasoft/engine/gradle/ShadeExtension.groovy
@@ -1,10 +1,17 @@
 package org.bonitasoft.engine.gradle
 
+import org.gradle.api.Project
+
 class ShadeExtension {
 
     List<ShadeInclusion> includes = []
+    List<Project> excludes = []
 
     def include(Map<String, String> artifact) {
         includes.add(new ShadeInclusion(artifact))
     }
+
+    def exclude(Project project) {
+        excludes.add(project)
+    }
 }
diff --git a/community/buildSrc/src/main/groovy/org/bonitasoft/engine/gradle/ShadePlugin.groovy b/community/buildSrc/src/main/groovy/org/bonitasoft/engine/gradle/ShadePlugin.groovy
index a3e0015b8c..74860ec3a2 100644
--- a/community/buildSrc/src/main/groovy/org/bonitasoft/engine/gradle/ShadePlugin.groovy
+++ b/community/buildSrc/src/main/groovy/org/bonitasoft/engine/gradle/ShadePlugin.groovy
@@ -21,24 +21,30 @@ class ShadePlugin implements Plugin<Project> {
         }
 
         project.afterEvaluate {
-            def includes = extension.includes
 
 
             project.shadowJar {
                 classifier = ""
                 dependencies {
                     include({
-                        isIncludedInShade(project, it, includes)
+                        isIncludedInShade(project, it, extension)
                     })
                 }
+                doFirst {
+                    project.logger.info("Shading for project {} : ", project.path)
+                    project.ext.projectsToShade.each {
+                        project.logger.info(" - {}", it)
+                    }
+                }
             }
 
+
             project.publishing.publications {
                 shadow(MavenPublication) { publication ->
                     project.shadow.component(publication)
                     pom.withXml {
 
-                        Set<Dependency> inPom = getPomDependencies(project, includes)
+                        Set<Dependency> inPom = getPomDependencies(project, extension)
                         project.logger.info("Include in pom:")
                         inPom.each {
                             project.logger.info(" - {}", it)
@@ -63,24 +69,13 @@ class ShadePlugin implements Plugin<Project> {
     }
 
 
-    private boolean isIncludedInShade(Project project, ResolvedDependency currentDependency, List<ShadeInclusion> includes) {
+    private boolean isIncludedInShade(Project project, ResolvedDependency currentDependency, ShadeExtension extension) {
         if (!project.ext.has("projectsToShade")) {
-            project.ext.projectsToShade = getAllProjectsToShade(project)
-            project.logger.info("Shading for project {} : ", project.path)
-            project.ext.projectsToShade.each {
-                project.logger.info(" - {}", it)
-            }
-            if (includes.size() > 0) {
-                project.logger.info("external dependencies: ")
-                includes.each {
-                    project.logger.info(" - {}:{}", it.group, it.name)
-                }
-            }
+            project.ext.projectsToShade = getAllProjectsToShade(project, extension)
         }
-        if (includes.contains(new ShadeInclusion(group: currentDependency.moduleGroup, name: currentDependency.moduleName))) {
+        if (extension.includes.contains(new ShadeInclusion(group: currentDependency.moduleGroup, name: currentDependency.moduleName))) {
             return true
         }
-
         Set<Project> projectsToShade = project.ext.projectsToShade
         def projectDep = getProjectFromDependency(project, currentDependency)
         if (projectDep == null) {
@@ -101,15 +96,15 @@ class ShadePlugin implements Plugin<Project> {
         it.plugins.any { p -> p instanceof ShadePlugin }
     }
 
-    private Set<Project> getAllProjectsToShade(Project project) {
+    private Set<Project> getAllProjectsToShade(Project project, ShadeExtension extension) {
         Set allProjects = []
         def dependencies = project.configurations.compile.dependencies
         dependencies.forEach {
             if (it instanceof ProjectDependency) {
                 def projectDependency = it.dependencyProject
-                if (!isAShadeProject(projectDependency)) {
+                if (!isAShadeProject(projectDependency) && !extension.excludes.contains(projectDependency)) {
                     allProjects.add(projectDependency)
-                    allProjects.addAll(getAllProjectsToShade(projectDependency))
+                    allProjects.addAll(getAllProjectsToShade(projectDependency, extension))
                 }
             }
         }
@@ -117,22 +112,22 @@ class ShadePlugin implements Plugin<Project> {
     }
 
 
-    private Set<Dependency> getPomDependencies(Project project, List<ShadeInclusion> includes) {
+    private Set<Dependency> getPomDependencies(Project project, ShadeExtension extension) {
         Set allDependencies = []
         def dependencies = project.configurations.compile.dependencies
         dependencies.forEach {
             if (it instanceof ProjectDependency) {
                 def projectDependency = it.dependencyProject
-                if (isAShadeProject(projectDependency)) {
+                if (isAShadeProject(projectDependency) || extension.excludes.contains(projectDependency)) {
                     // the project is a shaded project (e.g. bonita-common)
                     allDependencies.add(projectDependency)
                 } else {
                     // do not add it: project is shaded inside this project
-                    allDependencies.addAll(getPomDependencies(projectDependency, includes))
+                    allDependencies.addAll(getPomDependencies(projectDependency, extension))
                 }
             } else {
                 // external: add it in pom only if not in shade
-                if (!includes.contains(new ShadeInclusion(group: it.group, name: it.name))) {
+                if (!extension.includes.contains(new ShadeInclusion(group: it.group, name: it.name))) {
                     allDependencies.add(it)
                 }
             }
diff --git a/subscription/bpm/bonita-server/build.gradle b/subscription/bpm/bonita-server/build.gradle
index 75e17f7aa4..9fdb1f7f65 100644
--- a/subscription/bpm/bonita-server/build.gradle
+++ b/subscription/bpm/bonita-server/build.gradle
@@ -26,4 +26,8 @@ description = 'Bonita Server SP'
 shade {
   include group: "com.bonitasoft.manager", name: "manager"
   include group: "org.bonitasoft.security", name: "sysUtil"
+  exclude project(':engine:platform:platform-setup')
+  exclude project(':engine:platform:platform-resources')
+  exclude project(':engine:bpm:bonita-common')
+  exclude project(':subscription:platform:platform-resources-sp')
 }
-- 
2.20.1

